================================================================================
                    SESSION CREATION FEATURE ARCHITECTURE
================================================================================

USER INTERFACE FLOW
================================================================================

                          ┌─────────────────────────────┐
                          │   Nono Chat Bot Interface   │
                          │  User: xyz123 [➕] [📋]    │
                          └─────────────────────────────┘
                                      │
                    ┌───────────────────┼───────────────────┐
                    │                   │                   │
                    ▼                   ▼                   ▼
            ┌──────────────┐   ┌──────────────┐   ┌──────────────┐
            │   Create      │   │   Message    │   │   Manage     │
            │   Session     │   │   Chat       │   │   Sessions   │
            │   Modal       │   │   Area       │   │   Modal      │
            └──────────────┘   └──────────────┘   └──────────────┘
                    │                   │                   │
                    └───────────────────┼───────────────────┘
                                      │
                          JavaScript Event Handler


API ENDPOINT FLOW
================================================================================

FRONTEND REQUESTS                          BACKEND PROCESSING

POST /api/session/create                   SessionManager
├─ user_id                                 ├─ create_session()
├─ persona                                 ├─ Store in Redis
└─ metadata                                └─ Return session_id
                                           
GET /api/sessions                          SessionManager
                                           ├─ list_sessions_detailed()
                                           ├─ Scan Redis keys
                                           └─ Return all sessions

GET /api/session/{user_id}/history         ChatMemoryManager
                                           ├─ get_messages()
                                           └─ Return chat history

DELETE /api/session/{user_id}/clear        SessionManager + ChatMemoryManager
                                           ├─ clear_history()
                                           ├─ delete_session()
                                           └─ Return status


REDIS DATA STORAGE
================================================================================

┌─────────────────────────────────────────────────┐
│                   Redis Storage                 │
├─────────────────────────────────────────────────┤
│                                                 │
│  KEY: session:{user_id}                        │
│  ├─ user_id: "John Doe"                        │
│  ├─ persona: "mental_health_nurse"             │
│  ├─ created_at: "2024-10-20T12:00:00"          │
│  ├─ last_activity: "2024-10-20T12:15:00"       │
│  ├─ message_count: 5                           │
│  └─ metadata: {...}                            │
│  TTL: 3600 seconds                             │
│                                                 │
│  KEY: chat_history:{user_id}                   │
│  ├─ Message 1 (JSON)                           │
│  ├─ Message 2 (JSON)                           │
│  ├─ Message 3 (JSON)                           │
│  └─ ...                                        │
│                                                 │
└─────────────────────────────────────────────────┘


SESSION LIFECYCLE
================================================================================

1. CREATION
   ┌──────────────────┐
   │ User clicks ➕    │
   └────────┬─────────┘
            │
   ┌────────▼──────────┐
   │ Modal opens       │
   └────────┬──────────┘
            │
   ┌────────▼──────────────────────┐
   │ User enters:                   │
   │ - Display name (optional)      │
   │ - Persona (required)           │
   └────────┬───────────────────────┘
            │
   ┌────────▼───────────────────────┐
   │ POST /api/session/create        │
   └────────┬───────────────────────┘
            │
   ┌────────▼───────────────────────┐
   │ SessionManager.create_session() │
   │ - Generate session ID            │
   │ - Store in Redis                 │
   │ - Set TTL (3600 seconds)         │
   └────────┬───────────────────────┘
            │
   ┌────────▼───────────────────────┐
   │ Return session_id               │
   └────────┬───────────────────────┘
            │
   ┌────────▼───────────────────────┐
   │ Update Frontend                 │
   │ - Clear chat area               │
   │ - Show welcome message          │
   │ - Ready for input               │
   └──────────────────────────────────┘

2. MANAGEMENT
   ┌──────────────────┐
   │ User clicks 📋   │
   └────────┬─────────┘
            │
   ┌────────▼──────────┐
   │ Modal opens       │
   └────────┬──────────┘
            │
   ┌────────▼──────────────────┐
   │ GET /api/sessions          │
   └────────┬──────────────────┘
            │
   ┌────────▼────────────────────────────┐
   │ SessionManager.list_sessions_detailed()
   │ - Scan Redis keys (session:*)        │
   │ - Get session data                   │
   │ - Return all sessions                │
   └────────┬────────────────────────────┘
            │
   ┌────────▼──────────────────┐
   │ Display session list       │
   │ - Show all sessions        │
   │ - Highlight current        │
   │ - Show timestamps          │
   └──────────────────────────────┘

3. SWITCHING
   ┌──────────────────────────┐
   │ User clicks session      │
   └────────┬─────────────────┘
            │
   ┌────────▼──────────────────────────┐
   │ GET /api/session/{user_id}/history │
   └────────┬──────────────────────────┘
            │
   ┌────────▼────────────────────────────┐
   │ ChatMemoryManager.get_messages()     │
   │ - Get all messages                   │
   │ - Format for display                 │
   └────────┬────────────────────────────┘
            │
   ┌────────▼──────────────────────────┐
   │ Update Frontend                    │
   │ - Clear current chat area          │
   │ - Render all messages              │
   │ - Update user ID display           │
   │ - Set new session as active        │
   └────────┬──────────────────────────┘
            │
   ┌────────▼──────────────────┐
   │ Ready for chat             │
   │ Current session: switched  │
   └────────────────────────────┘


COMPONENT ARCHITECTURE
================================================================================

┌─────────────────────────────────────────────────────────────────┐
│                        Frontend (JavaScript)                    │
├─────────────────────────────────────────────────────────────────┤
│                                                                 │
│  ┌──────────────────────────────────────────────────────────┐  │
│  │  Session Modal Functions                                │  │
│  │  - openNewSessionModal()                                │  │
│  │  - closeNewSessionModal()                               │  │
│  │  - openManageSessionsModal()                            │  │
│  │  - closeManageSessionsModal()                           │  │
│  └──────────────────────────────────────────────────────────┘  │
│                                                                 │
│  ┌──────────────────────────────────────────────────────────┐  │
│  │  Session Management Functions                           │  │
│  │  - createNewSession()                                   │  │
│  │  - loadSessionsList()                                   │  │
│  │  - displaySessionsList()                                │  │
│  │  - switchSession()                                      │  │
│  │  - loadChatHistory()                                    │  │
│  └──────────────────────────────────────────────────────────┘  │
│                                                                 │
│  ┌──────────────────────────────────────────────────────────┐  │
│  │  Chat Functions                                         │  │
│  │  - sendMessage()                                        │  │
│  │  - addMessage()                                         │  │
│  │  - showLoading()                                        │  │
│  │  - removeLoading()                                      │  │
│  └──────────────────────────────────────────────────────────┘  │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                   Backend (FastAPI Python)                      │
├─────────────────────────────────────────────────────────────────┤
│                                                                 │
│  ┌──────────────────────────────────────────────────────────┐  │
│  │  API Endpoints                                          │  │
│  │  - POST /api/session/create                             │  │
│  │  - GET /api/sessions                                    │  │
│  │  - GET /api/session/{user_id}/history                   │  │
│  │  - DELETE /api/session/{user_id}/clear                  │  │
│  │  - POST /api/chat                                       │  │
│  └──────────────────────────────────────────────────────────┘  │
│                                                                 │
│  ┌──────────────────────────────────────────────────────────┐  │
│  │  SessionManager                                         │  │
│  │  - create_session()                                     │  │
│  │  - get_session()                                        │  │
│  │  - update_session()                                     │  │
│  │  - delete_session()                                     │  │
│  │  - list_active_sessions()                               │  │
│  │  - list_sessions_detailed() [NEW]                       │  │
│  └──────────────────────────────────────────────────────────┘  │
│                                                                 │
│  ┌──────────────────────────────────────────────────────────┐  │
│  │  ChatMemoryManager                                      │  │
│  │  - add_message()                                        │  │
│  │  - get_messages()                                       │  │
│  │  - get_context_window()                                 │  │
│  │  - clear_history()                                      │  │
│  └──────────────────────────────────────────────────────────┘  │
│                                                                 │
├─────────────────────────────────────────────────────────────────┤
│                      Redis Data Store                           │
│  - Session metadata (session:{user_id})                         │
│  - Chat history (chat_history:{user_id})                        │
│  - Auto-expiring after TTL                                      │
│  - Scalable to 100+ concurrent sessions                         │
└─────────────────────────────────────────────────────────────────┘


DATA MODELS
================================================================================

SessionCreateRequest
├─ user_id: str (required)
├─ persona: str (optional, default "default")
└─ metadata: dict (optional)

SessionCreateResponse
├─ session_id: str
├─ user_id: str
├─ created_at: str
└─ persona: str

SessionListItem
├─ session_id: str
├─ user_id: str
├─ persona: str
├─ created_at: str
├─ last_activity: str
└─ message_count: int

ChatMessage
├─ role: str ("user" or "assistant")
├─ content: str
├─ timestamp: str
└─ metadata: dict


FEATURE FLOW SUMMARY
================================================================================

        CREATE SESSION              MANAGE SESSIONS           SWITCH SESSION
             (1)                          (2)                       (3)

  Click "➕"        Modal Form      Click "📋"    Display List  Click Session
     │                │                │              │             │
     ▼                ▼                ▼              ▼             ▼
  Create          POST API          List API      Show Modal    Switch to
  Modal           /create           /sessions     All Sessions  New Session
     │                │                │              │             │
     ▼                ▼                ▼              ▼             ▼
  Input           Store in         Scan Redis    Render in      Load History
  Details         Redis            Keys          Modal           │
     │                │                │              │             │
     ▼                ▼                ▼              ▼             ▼
  Select          Return           Return all    User Clicks    Get History
  Persona         session_id        sessions      Entry          GET API
     │                │                │              │             │
     ▼                ▼                ▼              ▼             ▼
  Submit          Update            Display       Process       Get Messages
  Form            Frontend          List          Click         from Redis
     │                │                │              │             │
     ▼                ▼                ▼              ▼             ▼
  API Call        Clear Chat        Load Session  Update        Render in
  POST Create     Welcome Msg       Info          Current        Chat Area
     │                                                │             │
     └────────────────────────┬────────────────────────┬───────────┘
                              │
                              ▼
                        Ready to Chat


================================================================================
                            END OF ARCHITECTURE DIAGRAM
================================================================================
