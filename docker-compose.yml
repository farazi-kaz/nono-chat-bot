services:
  # Redis Service - Message and session storage
  redis:
    image: redis:7-alpine
    container_name: nono-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - nono-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # LM Studio Service - Local LLM provider (OpenAI-compatible API)
  # NOTE: LM Studio should be run separately as a desktop application
  # This service is commented out as LM Studio typically runs on the host machine
  # To use LM Studio with this project:
  # 1. Install LM Studio from https://lmstudio.ai
  # 2. Load your desired model in LM Studio
  # 3. Start the LM Studio server (default: http://localhost:1234)
  # 4. The API will connect to it automatically
  #
  # If you need to run LM Studio in a container, you can use this configuration:
  # lmstudio:
  #   image: your-lmstudio-image:latest
  #   container_name: nono-lmstudio
  #   ports:
  #     - "1234:1234"
  #   volumes:
  #     - lmstudio_data:/root/.cache/lm-studio
  #   networks:
  #     - nono-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:1234/v1/models"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: nono-api
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - FASTAPI_HOST=0.0.0.0
      - FASTAPI_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - LMSTUDIO_HOST=http://host.docker.internal:1234
      - MODEL_NAME=local-model
      - EMBEDDING_MODEL=local-model
      - MAX_CONTEXT_MESSAGES=10
      - VECTOR_STORE_DIMENSION=384
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - SESSION_TIMEOUT=3600
      - MAX_SESSIONS_PER_USER=5
    networks:
      - nono-network
    volumes:
      - ./app:/app/app
      - ./config:/app/config
      - ./public:/app/public
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  nono-network:
    driver: bridge

volumes:
  redis_data:
  # lmstudio_data:  # Uncomment if using LM Studio in container
